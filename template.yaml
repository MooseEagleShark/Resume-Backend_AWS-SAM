#template from https://github.com/aws-samples/aws-sam-github-actions-example
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A SAM (Serverless Application Model) visitor counter using lambda and python.

Resources:
  NewVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_write_ip.lambda_handler
      Runtime: python3.9
      CodeUri: ./lambda_python_functions/
      Policies:
      # Give the Lambda service access to poll your DynamoDB Stream
      - AmazonDynamoDBFullAccess
      Description: send ip datetime, store ip datetime in dynamodb, return count of unique ip
      Events:
        Api: # This lambda is triggered by a request to the API Gateway Endpoint /get-breed
          Type: Api
          Properties:
            Path: "/counter"
            Method: ANY

  dynamodb:
      Type: AWS::Serverless::SimpleTable #or AWS::DynamoDB::Table as "This property is passed directly to the TableName property of an AWS::DynamoDB::Table resource.  - This property is passed directly to the TableName property of an AWS::DynamoDB::Table resource.
      Properties:
        TableName: visitors
        PrimaryKey:
          Name: ip
          Type: String
